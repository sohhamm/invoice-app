generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  email String @unique 
  name String?
  password String
  invoices Invoice[]
}


model Invoice {
  id Int @id @default(autoincrement()) 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  invoiceDate DateTime 
  paymentTerms Int
  description String @db.VarChar(200)
  user User @relation(fields: [userId],references: [id]) 
  userId Int 
  status Boolean @default(false)
  senderAddress Address @relation("SenderAddress",fields: [senderAddressId],references: [id],onDelete: Cascade)
  senderAddressId Int
  clientName String
  clientEmail String
  clientAddress Address @relation("ClientAddress",fields: [clientAddressId],references: [id],onDelete: Cascade)
  clientAddressId Int
  items ItemInvoices[] 
}


model Address {
 id Int @id @default(autoincrement())
 street String 
 city String
 postCode String
 country String
 senderAddress Invoice[] @relation("SenderAddress")
 clientAddress Invoice[] @relation("ClientAddress")
}


model Item {
  id Int @id @default(autoincrement())
  name String 
  price Float
  invoices ItemInvoices[]
}


model ItemInvoices {
  invoice Invoice @relation(fields: [invoiceId],references: [id])
  invoiceId Int
  item Item @relation(fields: [itemId],references: [id])
  itemId Int
  quantity Int

  @@id([invoiceId,itemId])
}






